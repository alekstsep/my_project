---
- name: копируем конфиги nginx в "{{ nginx_conf_path }}"
  copy:
    src: ./roles/nginx/files/
    dest: "{{ nginx_conf_path }}"

- name: создаем директорию для сборки
  file:
    path: /tmp/nginx-install
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: создаем dockerfile
  copy:
    content: |
      # Используем Alpine Linux как базовый образ
      FROM alpine:latest
      # Установка зависимостей для сборки Nginx
      RUN apk update && \
      apk add --no-cache \
      build-base \
      openssl-dev \
      pcre-dev \
      zlib-dev \
      wget \
      git \
      libmaxminddb-dev \
      pcre \
      geoip-dev \
      tzdata
      # Создание временной директории и переход в нее
      WORKDIR /tmp/nginx-install
      # Скачивание и распаковка исходных кодов Nginx
      RUN wget -O /tmp/nginx-install/nginx-1.25.3.tar.gz https://nginx.org/download/nginx-1.25.3.tar.gz && \
      tar -zxvf nginx-1.25.3.tar.gz && rm nginx-1.25.3.tar.gz
      # Сборка Nginx
      RUN cd nginx-1.25.3 && \
      ./configure \
      --prefix=/usr/local/nginx \
      --with-http_ssl_module \
      --with-http_stub_status_module \
      --with-http_geoip_module \
      --with-http_realip_module \
      && make && make install
      # Создание директории для GeoIP и загрузка файла
      RUN mkdir -p /usr/share/GeoIP && \
      wget -O /usr/share/GeoIP/GeoIP.dat.gz https://mailfud.org/geoip-legacy/GeoIP.dat.gz && \
      gunzip -fdc /usr/share/GeoIP/GeoIP.dat.gz > /usr/share/GeoIP/GeoIP.dat && \
      rm /usr/share/GeoIP/GeoIP.dat.gz && \
      # Настройка часового пояса
      ln -sf /usr/share/zoneinfo/Europe/Kirov /etc/localtime
      # Открытие порта 80 для веб-сервера Nginx
      EXPOSE 80
      # Запуск Nginx в фоновом режиме при старте контейнера
      CMD ["/usr/local/nginx/sbin/nginx", "-g", "daemon off;"]
    dest: /tmp/nginx-install/dockerfile

- name: собираем образ nginx
  docker_image:
    name: my_nginx
    source: build
    build:
      path: /tmp/nginx-install
    state: present

- name: запускаем nginx
  docker_container:
    name: nginx
    image: my_nginx
    state: started
    restart_policy: always
    ports:
      - "80:80"
    networks:
      - name: "{{ network_name }}"
        ipv4_address: "{{ nginx_ip }}"
    volumes:
      - "{{ nginx_conf_path }}:/usr/local/nginx/conf"
      - "{{ nginx_logs_path }}:/usr/local/nginx/logs"
